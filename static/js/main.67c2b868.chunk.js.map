{"version":3,"sources":["components/Header/Header.js","components/firebase.js","components/TinderCards/TinderCards.js","components/SwipeButtons/SwipeButtons.js","components/Chat/Chat.js","components/Chats/Chats.js","components/ChatScreen/ChatScreen.js","App.js","reportWebVitals.js","index.js"],"names":["Header","backButton","history","useHistory","className","IconButton","onClick","replace","fontSize","to","src","alt","database","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","TinderCards","useState","people","setPeople","useEffect","collection","onSnapshot","snapshot","docs","map","doc","data","person","preventSwipe","style","backgroundImage","url","name","SwipeButtons","Chat","message","profilePic","timeStamp","Avatar","Chats","ChatScreen","input","setInput","image","messages","setMessages","value","onChange","e","target","type","placeholder","preventDefault","App","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67c2b868.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.css';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport {Link,useHistory} from 'react-router-dom';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\n\r\nfunction Header({backButton}) {\r\n    const history = useHistory();\r\n    return (\r\n        <div className=\"header\">\r\n            {backButton ? (\r\n                <IconButton onClick={() => history.replace(backButton)}><ArrowBackIcon className=\"header__icon\" fontSize=\"large\"  /></IconButton>\r\n            ):(\r\n                <IconButton><PersonIcon className=\"header__icon\" fontSize=\"large\"/></IconButton>\r\n            )}\r\n            \r\n            <Link to=\"/\">\r\n                <img className=\"header__logo\" src=\"https://1000logos.net/wp-content/uploads/2018/07/tinder-logo.png\" alt=\"\" />\r\n            </Link>\r\n            <Link to=\"/chat\"> \r\n                <IconButton><ForumIcon className=\"header__icon\" fontSize=\"large\" /></IconButton>\r\n            </Link>\r\n        \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyDQ0M_9lZavh5K8XZvp5vYqnhUHTevlBKY\",\r\n    authDomain: \"tind-clone.firebaseapp.com\",\r\n    databaseURL: \"https://tind-clone.firebaseio.com\",\r\n    projectId: \"tind-clone\",\r\n    storageBucket: \"tind-clone.appspot.com\",\r\n    messagingSenderId: \"956763647604\",\r\n    appId: \"1:956763647604:web:38e4fa6fa6fef0c4ad6b21\",\r\n    measurementId: \"G-7QEN1VYPC1\"\r\n  };\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst database = firebaseApp.firestore();\r\n\r\nexport default database;","import React,{useState,useEffect} from 'react';\r\nimport TinderCard from 'react-tinder-card';\r\nimport './TinderCards.css';\r\nimport database from '../firebase';\r\n\r\n\r\nfunction TinderCards() {\r\n    const [people,setPeople] = useState([]);\r\n\r\n    useEffect(() => {\r\n        database.collection('people').onSnapshot(snapshot => (\r\n            setPeople(snapshot.docs.map(doc => doc.data()))\r\n        ))\r\n    },[])\r\n    return (\r\n        <div>\r\n            <div className=\"tinderCards__cardContainer\">\r\n                {people.map(person => (\r\n                    <TinderCard className=\"swipe\" key={person.name} preventSwipe={['up','down']}>\r\n                        <div className=\"card\" style={{backgroundImage:`url(${person.url})`}}>\r\n                            <h3>{person.name}</h3>\r\n                        </div>\r\n                    </TinderCard>\r\n                ))}\r\n            </div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TinderCards;\r\n","import React from 'react';\r\nimport './SwipeButtons.css'; \r\nimport ReplayIcon from '@material-ui/icons/Replay';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport StarRateIcon from '@material-ui/icons/StarRate';\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport FlashOnIcon from '@material-ui/icons/FlashOn';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nfunction SwipeButtons() {\r\n    return (\r\n        <div className=\"swipeButtons\">\r\n            <IconButton className=\"swipeButtons__repeat\"><ReplayIcon fontSize=\"large\"/></IconButton>\r\n            <IconButton className=\"swipeButtons__left\"><CloseIcon fontSize=\"large\"/></IconButton>\r\n            <IconButton className=\"swipeButtons__star\"><StarRateIcon fontSize=\"large\"/></IconButton>\r\n            <IconButton className=\"swipeButtons__right\"><FavoriteIcon fontSize=\"large\"/></IconButton>\r\n            <IconButton className=\"swipeButtons__lightning\"><FlashOnIcon fontSize=\"large\"/></IconButton>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SwipeButtons;\r\n","import React from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport './Chat.css';\r\nimport {Link} from 'react-router-dom';\r\n\r\nfunction Chat({name,message,profilePic,timeStamp}) {\r\n    return (\r\n        <Link to={`/chat/${name}`}>\r\n            <div className=\"chat\">\r\n            <Avatar className=\"chat__image\" src={profilePic} alt={name} />\r\n            <div className=\"chat__details\">\r\n                <h2>{name}</h2>\r\n                <p>{message}</p>\r\n            </div>\r\n            <p className=\"chat__timeStamp\">{timeStamp}</p>\r\n            </div>\r\n        </Link>\r\n        \r\n    )\r\n}\r\n\r\nexport default Chat;\r\n","import React from 'react';\r\nimport Chat from '../Chat/Chat';\r\nimport './Chats.css';\r\n\r\nfunction Chats() {\r\n    return (\r\n        <div className=\"chats\">\r\n            <Chat \r\n            name=\"Mark\"\r\n            message=\"Message\"\r\n            timeStamp=\"40 Sec ago\"\r\n            profilePic=\"https://image.cnbcfm.com/api/v1/image/106330923-1578676182018gettyimages-1178141599.jpeg?v=1584633147&w=1400&h=950\"/>\r\n             <Chat \r\n            name=\"Jeff Bezos\"\r\n            message=\"Message\"\r\n            timeStamp=\"30 Sec ago\"\r\n            profilePic=\"https://specials-images.forbesimg.com/imageserve/5f469ea85cc82fc8d6083f05/960x0.jpg?fit=scale\"/>\r\n             <Chat \r\n            name=\"Donald Trump\"\r\n            message=\"Message\"\r\n            timeStamp=\"20 Sec ago\"\r\n            profilePic=\"https://cdn.i-scmp.com/sites/default/files/styles/768x768/public/d8/images/methode/2020/04/09/6ec15f6a-79f0-11ea-9b24-e7152d1bf921_image_hires_101727.jpg?itok=1eQ5Nixm&v=1586398657\"/>\r\n             <Chat \r\n            name=\"Virat Kohli\"\r\n            message=\"Message\"\r\n            timeStamp=\"10 Sec ago\"\r\n            profilePic=\"https://upload.wikimedia.org/wikipedia/commons/1/15/Virat_Kohli_portrait.jpg\"/>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chats;\r\n","import React,{useState} from 'react';\r\nimport './ChatScreen.css';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nfunction ChatScreen() {\r\n    const [input,setInput] = useState('');\r\n    const [messages,setMessages] = useState([\r\n        {\r\n            name:'Yash',\r\n            image:'https://images.yourstory.com/cs/2/211ccaf0-0e6d-11e9-97fe-8f165dce9bb1/Sanjana-Ray-Bill-Gates-Credit-Wiki1562912736042.png',\r\n            message:'Hello'\r\n        },\r\n        {\r\n            name:'Yash',\r\n            image:'https://images.yourstory.com/cs/2/211ccaf0-0e6d-11e9-97fe-8f165dce9bb1/Sanjana-Ray-Bill-Gates-Credit-Wiki1562912736042.png',\r\n            message:'Hii'\r\n        },\r\n        {\r\n            message:'fine'\r\n        }\r\n    ]);\r\n\r\n    const handleSend = (e) => {\r\n        e.preventDefault();\r\n        setMessages([...messages,{message:input}]);\r\n        setInput(\"\");\r\n    }\r\n    return (\r\n        <div className=\"chatScreen\">\r\n            <p className=\"chatScreen__timeStamp\">YOU MATCHED WITH PERSON</p>\r\n            {messages.map(message => (\r\n                message.name ? (\r\n                    <div className=\"chatScreen__message\">\r\n                    <Avatar \r\n                    className=\"chatScreen__image\"\r\n                    alt={message.name}\r\n                    src={message.image}/>\r\n                    <p className=\"chatScreen__text\">{message.message}</p>\r\n                    </div>\r\n                ):(\r\n                    <div className=\"chatScreen__message\">\r\n                    <p className=\"chatScreen__textUser\">{message.message}</p>\r\n                    </div>\r\n                )\r\n\r\n                \r\n            ))}\r\n            \r\n                <form className=\"chatScreen__input\">\r\n                    <input value={input} onChange={(e) => setInput(e.target.value)}className=\"chatScreen__inputField\" type=\"text\" placeholder=\"Your Message\"/>\r\n                    <button type=\"submit\" onClick={handleSend} className=\"chatScreen__inputButton\">Send</button>\r\n                </form>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ChatScreen;\r\n","import './App.css';\nimport Header from './components/Header/Header';\nimport {BrowserRouter as Router,Switch,Route,Link} from 'react-router-dom';\nimport TinderCards from './components/TinderCards/TinderCards';\nimport SwipeButtons from './components/SwipeButtons/SwipeButtons';\nimport Chats from './components/Chats/Chats';\nimport ChatScreen from './components/ChatScreen/ChatScreen';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      \n      <Router>\n        \n        <Switch>\n          <Route path=\"/chat/:person\">\n            <Header backButton=\"/chat\" />\n            <ChatScreen />\n          </Route>\n          <Route path=\"/chat\">\n            <Header backButton=\"/\" />\n            <Chats />\n          </Route>\n          <Route path=\"/\">\n             <Header />\n             <TinderCards />\n             <SwipeButtons />\n          </Route>\n        </Switch>\n      </Router>\n      \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}